import React, { useState } from 'react'
import { motion } from 'framer-motion'
import { calcDestinyNumber } from '../core/numUtils.js'
import { getDigitCounts } from '../core/matrixUtils.js'

const fieldRecommendations = {
  1: ['Руководитель и управленец любого уровня', 'Предпринимательство и бизнес', 'Организатор проектов', 'Публичная деятельность'],
  2: ['Работа с персоналом', 'HR и переговоры', 'Психология и консультирование', 'Работа в сфере услуг'],
  3: ['Творческие профессии', 'Маркетинг и PR', 'Общественная деятельность, образование', 'Журналистика и публицистика'],
  4: ['Инжиниринг и строительство', 'Бухгалтерия и аудит', 'Аналитик или планировщик', 'Мастер или ремесленник'],
  5: ['Путешествия и туризм', 'Логистика', 'Торговля и маркетинг', 'Разработчик или новатор'],
  6: ['Медицина и педагогика', 'Сфера обслуживания', 'Дизайнер интерьеров или художник', 'Социальный работник'],
  7: ['Научные исследования', 'IT и аналитика', 'Астролог, философ, духовный наставник', 'Преподаватель или писатель'],
  8: ['Финансы и инвестиции', 'Управление проектами', 'Юрист, адвокат или судья', 'Коуч или спикер'],
  9: ['Социальная работа', 'Культура и искусство', 'Психология и консультирование', 'Журналист или продюсер'],
  11: ['Консультирование', 'Творчество и искусство', 'Духовность и целительство', 'Медиа и коммуникации'],
  22: ['Строительство и инфраструктура', 'Корпоративное управление', 'Изобретатель или технолог', 'Профессор или наставник'],
  33: ['Социальные проекты', 'Образование и благотворительность', 'Продюсер или писатель', 'Духовный учитель или консультант'],
}

// Соответствие цифры её «характеристике» в первом столбце
const characteristicMap = {
  1: 'Лидерские качества',
  2: 'Общительность',
  3: 'Технарь/гуманитарий',
  4: 'Выносливость',
  5: 'Прогнозирование и адаптивность',
  6: 'Усидчивость',
  7: 'Универсальность/профильная одаренность',
  8: 'Ответственность, управление ресурсами + эмпатия',
  9: 'Инфоменеджмент, объемная аналитика',
}

// Динамические трактовки по числу и количеству
function getDynamicInterpretation(num, count) {
  switch (num) {
    case 1:
      if (count >= 3) return 'Работа, требующие лидерские качества: руководство и управление — подходит человеку.'
      if (count === 2) return 'Человек подходит на руководящие должности, если должность не предполагает жесткого управления.'
      if (count === 1) return 'Человек имеет задатки лидерских качеств, но для руководящих ролей нужны дополнительные навыки/опыт.'
      return 'Работа, требующая лидерские качества — не подходит человеку.'
    case 2:
      if (count >= 3) return 'Работа, требующая коммуникабельности, дипломатии, работа в команде — отлично подходит человеку.'
      if (count === 2) return 'Человеку комфортно работать в команде: подходит деятельность, требующая коммуникабельности, дипломатии.'
      if (count === 1) return 'Человек может работать в команде, он обладает умеренной коммуникабельностью и дипломатией.'
      return 'Склонность к интроверсии: человеку удобно работать в уединении или при небольшом количестве контактов.'
    case 3:
      if (count >= 3) return 'Человек склонен к точным наукам. Подходит техническая сфера деятельности.'
      if (count === 2) return 'Техническая сфера деятельности больше подойдет человеку, но гуманитарная не исключена.'
      if (count === 1) return 'Подходит, как техническая, так и гуманитарная сферы деятельности.'
      return 'Гуманитарная сфера деятельности больше подходит человеку.'
    case 4:
      if (count >= 3) return 'Работа, требующая физическую выносливость, подходит человеку.'
      if (count === 2) return 'Работа, требующая физическую выносливость, подходит человеку.'
      if (count === 1) return 'Работа, требующая умеренную физическую выносливость, может подойти человеку.'
      return 'Работа, требующая физической выносливости, не подходит человеку.'
    case 5:
      if (count >= 3) return 'Отлично подходит работа, требующая быстрого принятия решений в изменяющейся среде: человек "чувствует" ситуацию, умеет ее предсказать, быстро адаптируется и учится.'
      if (count === 2) return 'Подходит работа, требующая принятия решений в изменяющейся среде: у человека неплохие навыки прогнозирования и адаптации к ситуации.'
      if (count === 1) return 'Работа требующая принятия решений в изменяющейся среде, может подойти человеку, он способен адаптироваться, прогнозировать и обучаться, но это не всегда дается ему легко.'
      return 'Человеку больше подходит стабильная работа, не требующая быстрого принятия решений в изменяющейся среде.'
    case 6:
      if (count >= 3) return 'Кропотливая, требующая усидчивости и ручная работа подходит человеку.'
      if (count === 2) return 'Кропотливая, требующая усидчивости и ручная работа подходит человеку.'
      if (count === 1) return 'Человек не слишком склонен к кропотливой деятельности и работе руками.'
      return 'Человек не усидчив, ему не подходит кропотливая монотонная деятельность или работа руками.'
    case 7:
      if (count >= 3) return 'Человек крайне талантлив в определенной профессиональной нише и он чувствует свою предрасположенность. Другие сферы не принесут ему должного успеха.'
      if (count === 2) return 'У человека есть определенная профессиональная ниша, которая принесет ему успех и, как правило, он быстро в ней определяется.'
      if (count === 1) return 'У человека есть предрасположенность к одной из сфер деятельности, но ему не всегда просто с ней определиться.'
      return 'Человек способен проявить себя в разных сферах деятельности, нет четкой специализации. Успех всегда = затраченным силам.'
    case 8:
      if (count >= 3) return 'Это мастер управления ресурсами: человек ценит материальные блага, очень ответственный, пунктуальный, учитывает комфорт окружающих людей (выражена эмпатичность).'
      if (count === 2) return 'У человека хорошие навыки управления ресурсами, он стремится к материальному обогащению. Готов нести ответственность за свою работу и комфорт окружающих людей (выражена эмпатичность).'
      if (count === 1) return 'Ответственность выражена умеренно. Управление ресурсами может даваться с трудом, нужна практика/опыт. Есть базовая эмпатия.'
      return 'Управление ресурсами, ответственное планирование - не для этого человека. Работа, требующая проявления эмпатии - тоже не подходит.'
    case 9:
      if (count >= 3) return 'Человек прекрасно может работать с данными, базами, документацией, стратегическим планированием - выдающаяся память и аналитические способности.'
      if (count === 2) return 'Человек может работать с данными, базами, документацией, стратегическим планированием.'
      if (count === 1) return 'Подходят профессии с умеренной информационной нагрузкой.'
      return 'Работа с большими массивами данных, аналитикой и обучением «на лету» не подходят человеку.'
    default:
      return ''
  }
}

export default function StaffFitScreen({ onBack }) {
  const [date, setDate] = useState('')
  const [destiny, setDestiny] = useState(null)
  const [fieldRecs, setFieldRecs] = useState([])
  const [matrixCounts, setMatrixCounts] = useState({})

  const handleCalculate = () => {
    if (!date) return
    const d = calcDestinyNumber(date)
    setDestiny(d)
    setFieldRecs(fieldRecommendations[d] || [])
    setMatrixCounts(getDigitCounts(date))
  }

  return (
    <motion.div
      key="staff"
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      exit={{ opacity: 0, y: -20 }}
      className="w-full max-w-md bg-black/30 backdrop-blur-lg rounded-2xl p-6 shadow-lg space-y-4"
    >
      <button onClick={onBack} className="text-sm text-amber-400 hover:underline">
        ← назад
      </button>

      <h2 className="text-2xl font-bold">Подбор специальности</h2>
      <p className="text-sm opacity-80">Введите дату рождения:</p>

      <div className="flex gap-2">
        <input
          type="date"
          value={date}
          onChange={(e) => setDate(e.target.value)}
          className="flex-1 bg-white/10 rounded-md p-2 text-white"
        />
        <button
          onClick={handleCalculate}
          className="py-2 px-4 bg-amber-400 text-black rounded-md font-semibold"
        >
          Рассчитать
        </button>
      </div>

      {destiny != null && (
        <>
          {/* Таблица 1: число судьбы и рекомендации */}
          <h3 className="text-lg font-semibold">Число судьбы: {destiny}</h3>
          <table className="w-full text-sm border border-white/50 mb-6">
            <thead>
              <tr>
                <th className="p-2 border-b">Рекомендуемые сферы</th>
              </tr>
            </thead>
            <tbody>
              {fieldRecs.map((rec, idx) => (
                <tr key={idx}>
                  <td className="p-2 border-b">{rec}</td>
                </tr>
              ))}
            </tbody>
          </table>

          {/* Таблица 2: психоматрица — профессиональный профиль */}
          <h3 className="text-lg font-semibold">
            Психоматрица — профессиональный профиль
          </h3>
          <table className="w-full text-sm border border-white/50">
            <thead>
              <tr>
                <th className="p-2 border-b">Характеристика</th>
                <th className="p-2 border-b">Количество</th>
                <th className="p-2 border-b">Интерпретация</th>
              </tr>
            </thead>
            <tbody>
              {Array.from({ length: 9 }, (_, i) => i + 1).map((num) => {
                const count = matrixCounts[num] || 0
                const display =
                  count > 0 ? String(num).repeat(count) : `${num}х0`
                const interpretation = getDynamicInterpretation(num, count)
                const characteristic = characteristicMap[num]

                return (
                  <tr key={num}>
                    <td className="p-2 border-b">{characteristic}</td>
                    <td className="p-2 border-b">{display}</td>
                    <td className="p-2 border-b text-sm opacity-90">
                      {interpretation}
                    </td>
                  </tr>
                )
              })}
            </tbody>
          </table>

          {/* Подпись под таблицей */}
          <p className="text-xs opacity-70 mt-2">
            Помните: психоматрицу следует рассматривать комплексно – её элементы взаимодополняют и компенсируют друг друга.
          </p>
        </>
      )}
    </motion.div>
  )
}







